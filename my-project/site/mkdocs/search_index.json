{
    "docs": [
        {
            "location": "/", 
            "text": "Notre projet\n\n\nNous sommes 5 etudiants en Licence 3 d'Electronique Fondamentale. Nous participons dans le cadre de notre Cursus a un projet  qui consiste a utiliser un microcontroleur (L'ESP 8266) pour realiser et concevoir un objet dit \"intelligent\".Nous avons concu un objet connecte qui affiche la meteo.\nNous avons decomposer la description de notre projet en 3 parties distinctes:  \n\n\nLa conception de de circuit ou le 'hardware'.\n\n\nDans cette partie nous avons concus  plusieurs circuits imprimes pour notre projet:  \n\n\n-Dans un premier temps nous detaillerons la conception d'un circuit support pour faciliter la connexion de l'Esp 8266 a un ordinateur.  \n\n\n-Puis nous parlerons de la realisation du circuit final de notre projet.  \n\n\nLe codage de la partie 'software'.\n\n\nPour la realisation du projet nous avons du apprendre a nous servir d'un nouveau language informatique: MICRO-PYTHON. C'est un language \ninformatique base sur PYTHON mais qui est specialement adaptees au codage de microcontroleur.\nAvant toute chose nous nous sommes interesses a la realisation d'un algorithme fonctionnel sur PYTHON.\n\nUne fois notre code au point sur PYTHON il etait beaucoup plus simple a transferer en MICROPYTHON.\n\nA travers ces differents codes nous avons appris a nous servir d'une API(Application Programming Interface) et de la fonction 'request'.\n\nC'est pourquoi nous vous detaillerons en premier les algorithmes que nous avons realises sur PYTHON.\n\nEnsuite nous detaillerons les differents codes qui permettent au microcontroleur d'etre connecte a internet.\n\nIl sera fourni en fin de page des codes complets et fonctionnels qui permettent de Connecter une nouvelle ESP pour refaire le projet .   \n\n\nL'habillage du prototype.\n\n\nApres la conception des differentes parties electroniques et informatiques de notre projet il fallait rendre\n notre projet plus esthetique.\n\nNous avons eu l'occasion d'utiliser une imprimante 3D pour concevoir l'habillage de notre projet. \nNous detaillerons ici les etapes de conception  ainsi que le fonctionnement d'une imprimante 3D.", 
            "title": "Presentation du projet"
        }, 
        {
            "location": "/#notre-projet", 
            "text": "Nous sommes 5 etudiants en Licence 3 d'Electronique Fondamentale. Nous participons dans le cadre de notre Cursus a un projet  qui consiste a utiliser un microcontroleur (L'ESP 8266) pour realiser et concevoir un objet dit \"intelligent\".Nous avons concu un objet connecte qui affiche la meteo.\nNous avons decomposer la description de notre projet en 3 parties distinctes:", 
            "title": "Notre projet"
        }, 
        {
            "location": "/#la-conception-de-de-circuit-ou-le-hardware", 
            "text": "Dans cette partie nous avons concus  plusieurs circuits imprimes pour notre projet:    -Dans un premier temps nous detaillerons la conception d'un circuit support pour faciliter la connexion de l'Esp 8266 a un ordinateur.    -Puis nous parlerons de la realisation du circuit final de notre projet.", 
            "title": "La conception de de circuit ou le 'hardware'."
        }, 
        {
            "location": "/#le-codage-de-la-partie-software", 
            "text": "Pour la realisation du projet nous avons du apprendre a nous servir d'un nouveau language informatique: MICRO-PYTHON. C'est un language \ninformatique base sur PYTHON mais qui est specialement adaptees au codage de microcontroleur.\nAvant toute chose nous nous sommes interesses a la realisation d'un algorithme fonctionnel sur PYTHON. \nUne fois notre code au point sur PYTHON il etait beaucoup plus simple a transferer en MICROPYTHON. \nA travers ces differents codes nous avons appris a nous servir d'une API(Application Programming Interface) et de la fonction 'request'. \nC'est pourquoi nous vous detaillerons en premier les algorithmes que nous avons realises sur PYTHON. \nEnsuite nous detaillerons les differents codes qui permettent au microcontroleur d'etre connecte a internet. \nIl sera fourni en fin de page des codes complets et fonctionnels qui permettent de Connecter une nouvelle ESP pour refaire le projet .", 
            "title": "Le codage de la partie 'software'."
        }, 
        {
            "location": "/#lhabillage-du-prototype", 
            "text": "Apres la conception des differentes parties electroniques et informatiques de notre projet il fallait rendre\n notre projet plus esthetique. \nNous avons eu l'occasion d'utiliser une imprimante 3D pour concevoir l'habillage de notre projet. \nNous detaillerons ici les etapes de conception  ainsi que le fonctionnement d'une imprimante 3D.", 
            "title": "L'habillage du prototype."
        }, 
        {
            "location": "/le hardware/", 
            "text": "Conception et realisation des composantes electronique du projet\n\n\nCette partie reprend donc la realisation ainsi que la conception des differents circuits du projet.Pour cela nous introduirons d'abord le logiciel que nous avons utilises pour concevoir les differents circuits. nous detaillerons ensuite les 2 circuits principaux lie au projet.\n\n\nRappel pour l'utilisation de EAGLE.\n\n\nVoici un petit tutoriel pour utiliser EAGLE-Autodesk.Eagle etant un FREECIEL en anglais. \n\n\nEtape 1\n\n\nOn telecharge le logiciel grace au lien suivant:\n\n\nhttps://www.autodesk.com/products/eagle/free-download\n\n\n\nEtape 2\n\n\nOn cree un nouveau projet qui servira a enregistrer les differents schemas et composants: \n\n\n File-\n new project\n\n\n\nEnsuite on va cree une librairie qui regroupera les differentes structures pour les nouveaux composants que nous allons creer pour notre projet.\n\n\n new library\n\n\n\nEtape 3\n\n\nDans cette etape nous allons participer a la creation des differents composants car malgres le faite que la bibliotheque de EAGLE soit dense on ne trouvera pas toujours les composants que nous utiliserons reelement.\n\n\nPremierement nous allons creer un 'package' qui permet la creation des 'PINS' a implementer sur le circuit imprime.\n\n\n File -\n New Package.\n\n\n\nUne fois le nouveau package cree on double clique dessus et on se retrouve sur un page avec 4 onglets disponible:  \n\n\n-Device  \n\n\n-Package  \n\n\n-3D Package  \n\n\n-Symbol \n\n\nEn bas de ces onglets on clique sur 'ADD ...'.  \n\n\nADD PACKAGE.\n\n\nDans cette partie on va chercher a creer les 'Trous' qui seront presents sur le circuit imprime. \n\n\n Icone : ADD pins.\n\n Les pins carre sont utilise pour l'entree de la tension.\n\n Les pins rond pour les differentes sorties des composants.\n\n Pour simplifier les etapes suivantes donner des noms marquants a ces sorties.\n\n Sauvegarder\n\n\n\nADD SYMBOL.\n\n\nDans cette partie nous allons creer les symboles qui serviront a placer les composants sur le circuit. \n\n\nDessiner la forme du composant.\n\nAjouter les differentes pattes.\n\nChanger les noms des pattes de manieres a se reperer.\n\nSauvegarder.\n\n\n\nADD DEVICE.\n\n\nDans cette partie nous allons combiner et connecter les symboles a leur packages.\n\n\n On va chercher d'un cote le symbole creer pour le composant et de l'autre le package.\n\n On clique sur le bouton connect.\n\n Si l'on a choisi des noms parlants on va pouvoir lier simplement les pattes aux 'trous'.\n\n Sauvegarder.\n\n\n\nConception d'un circuit\n\n\nMaintenant que toutes les bibliotheques sont remplis et que chaque composants possede le bon nombre de pattes on peux passer a la modelisation du circuit.\nOn reprend donc chaque bibliotheques et on implemente tous les composants sur le schema , on cree un rectangle asser grand et on place tous les composants sur ce rectangle.\nOn relier chacune des pattes des composants entre elle pour creer nos pistes de conduction.\n\n\nSupport  de connexion pour L'ESP.\n\n\nPour connecter notre projet a un ordinateur nous avons du connecter le microcontrolleur a un circuit imprimer realiser par nos soins. Cette connexion s'effectue par le biais d'un cable FTDI.\nIl fallait veiller a ce que chaque partie se connecte au bonne endroit pour eviter tous risque de court circuit.\nNous avons donc du respecter le schema de connexion ci dessous:\n\n\n Le RX du FTDI au TX de l'ESP8266\n\n Le TX du FTDI au RX de l'ESP8266\n\n Le GND du FTDI au GND de l'ESP8266\n\n Le VCC du FTDI au VCC de l'ESP8266\n\n\n\nEnsuite pour permettre l'affichage des donnees  nous avons connecter un ecran OLED sur le meme circuit imprime.\nIl a de nouveau fallu verifier les connectiques pour qu'elles respectent le schema suivant:\n\n\n Le SDA du SSD1306 au GPIO0 de l'ESP8266\n\n Le SCK du SSD1306 au GPIO2 de l'ESP8266\n\n Le GND du SSD1306 au GND de l'ESP8266\n\n Le VCC du SSD1306 au 3.3V de l'ESP8266\n\n\n\nCircuit pour le projet final.\n\n\nDans le cadre de notre projet nous devions rendre cette objet connecte.Il fallait aussi trouver un moyen de lire les donnees recuperer et de pouvoir alimenter l'ensemble des composants \nsans avoir besoin d'etre constamment brancher a un ordinateur.\nIl fallait subvenir au besoin electrique de l'ESP 8266 et de l'ecran oled.\nNous avons donc concu un circuit imprimer capable d'alimenter tous ces composants.\nL'utilisation d'un panneau solaire nous paraissait etre la plus adapter pour repondre au besoin du projet mais pour fournir le courant minimal necessaire a l'alimentation du projet\nil fallait mettre un panneau delivrant une tension assez importante. Il est apparu un risque de claquage pour les composants. Nous\navons donc appris comment contourner ce probleme en utilisant un regulateur de tension.\nLa conception du circuit a donc pris en compte cette ajout de composant. Pour reguler le flux de tension nous avons ajoutes deux capacites autour du regulateur de tension.\n\n\nMaintenant que la conception des differents circuits imprimes est terminee nous pouvons entamer la seconde partie du projet : Le codage informatique.", 
            "title": "Le hardware"
        }, 
        {
            "location": "/le hardware/#conception-et-realisation-des-composantes-electronique-du-projet", 
            "text": "Cette partie reprend donc la realisation ainsi que la conception des differents circuits du projet.Pour cela nous introduirons d'abord le logiciel que nous avons utilises pour concevoir les differents circuits. nous detaillerons ensuite les 2 circuits principaux lie au projet.", 
            "title": "Conception et realisation des composantes electronique du projet"
        }, 
        {
            "location": "/le hardware/#rappel-pour-lutilisation-de-eagle", 
            "text": "Voici un petit tutoriel pour utiliser EAGLE-Autodesk.Eagle etant un FREECIEL en anglais.", 
            "title": "Rappel pour l'utilisation de EAGLE."
        }, 
        {
            "location": "/le hardware/#etape-1", 
            "text": "On telecharge le logiciel grace au lien suivant:  https://www.autodesk.com/products/eagle/free-download", 
            "title": "Etape 1"
        }, 
        {
            "location": "/le hardware/#etape-2", 
            "text": "On cree un nouveau projet qui servira a enregistrer les differents schemas et composants:    File-  new project  Ensuite on va cree une librairie qui regroupera les differentes structures pour les nouveaux composants que nous allons creer pour notre projet.   new library", 
            "title": "Etape 2"
        }, 
        {
            "location": "/le hardware/#etape-3", 
            "text": "Dans cette etape nous allons participer a la creation des differents composants car malgres le faite que la bibliotheque de EAGLE soit dense on ne trouvera pas toujours les composants que nous utiliserons reelement.  Premierement nous allons creer un 'package' qui permet la creation des 'PINS' a implementer sur le circuit imprime.   File -  New Package.  Une fois le nouveau package cree on double clique dessus et on se retrouve sur un page avec 4 onglets disponible:    -Device    -Package    -3D Package    -Symbol   En bas de ces onglets on clique sur 'ADD ...'.", 
            "title": "Etape 3"
        }, 
        {
            "location": "/le hardware/#add-package", 
            "text": "Dans cette partie on va chercher a creer les 'Trous' qui seront presents sur le circuit imprime.    Icone : ADD pins.  Les pins carre sont utilise pour l'entree de la tension.  Les pins rond pour les differentes sorties des composants.  Pour simplifier les etapes suivantes donner des noms marquants a ces sorties.  Sauvegarder", 
            "title": "ADD PACKAGE."
        }, 
        {
            "location": "/le hardware/#add-symbol", 
            "text": "Dans cette partie nous allons creer les symboles qui serviront a placer les composants sur le circuit.   Dessiner la forme du composant. Ajouter les differentes pattes. Changer les noms des pattes de manieres a se reperer. Sauvegarder.", 
            "title": "ADD SYMBOL."
        }, 
        {
            "location": "/le hardware/#add-device", 
            "text": "Dans cette partie nous allons combiner et connecter les symboles a leur packages.   On va chercher d'un cote le symbole creer pour le composant et de l'autre le package.  On clique sur le bouton connect.  Si l'on a choisi des noms parlants on va pouvoir lier simplement les pattes aux 'trous'.  Sauvegarder.", 
            "title": "ADD DEVICE."
        }, 
        {
            "location": "/le hardware/#conception-dun-circuit", 
            "text": "Maintenant que toutes les bibliotheques sont remplis et que chaque composants possede le bon nombre de pattes on peux passer a la modelisation du circuit.\nOn reprend donc chaque bibliotheques et on implemente tous les composants sur le schema , on cree un rectangle asser grand et on place tous les composants sur ce rectangle.\nOn relier chacune des pattes des composants entre elle pour creer nos pistes de conduction.", 
            "title": "Conception d'un circuit"
        }, 
        {
            "location": "/le hardware/#support-de-connexion-pour-lesp", 
            "text": "Pour connecter notre projet a un ordinateur nous avons du connecter le microcontrolleur a un circuit imprimer realiser par nos soins. Cette connexion s'effectue par le biais d'un cable FTDI.\nIl fallait veiller a ce que chaque partie se connecte au bonne endroit pour eviter tous risque de court circuit.\nNous avons donc du respecter le schema de connexion ci dessous:   Le RX du FTDI au TX de l'ESP8266  Le TX du FTDI au RX de l'ESP8266  Le GND du FTDI au GND de l'ESP8266  Le VCC du FTDI au VCC de l'ESP8266  Ensuite pour permettre l'affichage des donnees  nous avons connecter un ecran OLED sur le meme circuit imprime.\nIl a de nouveau fallu verifier les connectiques pour qu'elles respectent le schema suivant:   Le SDA du SSD1306 au GPIO0 de l'ESP8266  Le SCK du SSD1306 au GPIO2 de l'ESP8266  Le GND du SSD1306 au GND de l'ESP8266  Le VCC du SSD1306 au 3.3V de l'ESP8266", 
            "title": "Support  de connexion pour L'ESP."
        }, 
        {
            "location": "/le hardware/#circuit-pour-le-projet-final", 
            "text": "Dans le cadre de notre projet nous devions rendre cette objet connecte.Il fallait aussi trouver un moyen de lire les donnees recuperer et de pouvoir alimenter l'ensemble des composants \nsans avoir besoin d'etre constamment brancher a un ordinateur.\nIl fallait subvenir au besoin electrique de l'ESP 8266 et de l'ecran oled.\nNous avons donc concu un circuit imprimer capable d'alimenter tous ces composants.\nL'utilisation d'un panneau solaire nous paraissait etre la plus adapter pour repondre au besoin du projet mais pour fournir le courant minimal necessaire a l'alimentation du projet\nil fallait mettre un panneau delivrant une tension assez importante. Il est apparu un risque de claquage pour les composants. Nous\navons donc appris comment contourner ce probleme en utilisant un regulateur de tension.\nLa conception du circuit a donc pris en compte cette ajout de composant. Pour reguler le flux de tension nous avons ajoutes deux capacites autour du regulateur de tension.  Maintenant que la conception des differents circuits imprimes est terminee nous pouvons entamer la seconde partie du projet : Le codage informatique.", 
            "title": "Circuit pour le projet final."
        }, 
        {
            "location": "/le software/", 
            "text": "Codage et informatique lie au projet\n\n\nIci nous detaillerons les differents codes que nous avons developpes pour la realisation du projet.\n\n\nLibrairies utilises avec PYTHON\n\n\nUtilisation de Requests\n\n\n import requests\n\n\n url=\"...\"\n\n\n r=requests.get(url)\n\n\n\nCes quelques lignes de codes permettent de recuperer les donnees d'une page web.\nIl suffit de remplacer le trou laisser dans la variable URL pour notifier la page web ou l'on souhaite recuperer les informations.\n\n\n import requests\n\n\n url=\"https://www.wikipedia.org/\"\n\n\n r=requests.get(url)\n\n\nprint(r)\n\n\n\nL'exemple au dessus permet de charger les informations de la page d'acceuil de WIKIPEDIA.\n\n\nUtilisation d'une API\n\n\nPour notre projet nous avons besoin de recuperer des donnees sur la meteo a des endroits precis du globe,\npour cela nous nous sommes tournes vers le site:  \n\n\nOPENWEATHERMAP.ORG  \n\n\nhttp://api.openweathermap.org/data/2.5/forecast?id={ID}\nAPPID={APIKEY}\n\n\n\nLa ligne de code precedente permet de recuperer les donnees meteorologique sur le site a l'aide d'une API.Pour pouvoir utiliser celle ci nous nous sommes\ninscrits sur le site et nous avons recu une APIKEY. Cette APIKEY nous permet d'obtenir les donnees meteorologiques legalement pour permettre le bon fonctionnement de notre projet.\n\n\nUtilisation du format json\n\n\nLes donnees sous le format JSON apparaissent sous la forme d'un dictionnaire.\nOn sait qu'un dictionnaire marche grace a la combinaison d'un 'id' et d'une 'cle'.\nOn peut donc extraire la donnee souhaitee si l'on connait les 'liens' propre a ce dictionnaire.\nVoici un petit exemple qui montre comment marche un dictionnaire.\n\n\nmon_dictionnaires={'mot de passe': '*', 'pseudo': '6pri1'}\n\n\nmon_dictionnaire['mot de passe']\n\n\n'*'\n\n\nmon_dictionnaire['pseudo']\n\n\n'6pri1'\n\n\n\nDevant la simplicite d'utilisation du format JSON nous avons decide d'incorporer dans notre code la fonction JSON\nqui permettra de crer une arborescence plus simple des donnees et qui nous facilitera l'acces a celles-ci.\n\n\nLe code va de nouveau se modifier pour devenir:\n\n\n import requests\n\n\nimport json\n\n\n url=\"http://api.openweathermap.org/data/2.5/forecast?id={ID}\nappid={APIKEY}\"\n\n\n r=requests.get(url)\n\n\ndata=r.json()\n\n\n\nAlgorithme de recuperation des donnees meteorologiques\n\n\nRecuperation de la temperature et de la description du temps\n\n\nDans un fichier texte sur le site OPENWEATHERMAP il est possible de connaitre l'arborescence des differents dictionnaires\nNous avons donc pu deduire les 2 prochaines lignes de code:\n\n\ntemp0=int(data['list'][0]['main']['temp']-273)  (donne la temperature)\n\n\ndesc0=data['list'][0]['weather'][0]['description'] (donne la description du temp)\n\n\n\nComment avoir les donnees de la ville de LILLE\n\n\nMaintenant que nous savons comment recuperer les differentes donnees il faut que l'on trouve un moyen pour n'obtenir que les donnees pour la ville de lille.\nReprenons l'url qui nous permet d'acceder aux donnees:\n\n\nhttp://api.openweathermap.org/data/2.5/forecast?id={ID}\nappid={APIKEY}\n\n\n\nOn remarque que deux donnees sont a rentrer,nous avons deja aborder la premiere qui est APIKEY.\n\nLa seconde represente un code rattacher a une ville.Le lien entre les villes et leur code est fournis par le site \nOPENWEATHERMAP via un fichier texte qui regroupe toute les ville et leur ID. \n\n\nApres quelque recherche Il s'avere que l'ID par laquel la ville de Lille est repertorier est : 2998323.  \n\n\nOn obtient donc l'url finale :\n\n\nhttp://api.openweathermap.org/data/2.5/forecast?id=2998323\nappid={APIKEY}\n\n\n\nUtilisation de micropython\n\n\nPour coder sur le microcontroleur nous avons importer le langage 'Micropython'.C'est un langage simplifier de python:\nil ne contient pas toutes les librairies disponibles sur python mais il permet de retrouver quelque librairie de base. Ce langage est surtout utilise pour \ncoder des microcontroleurs.\n\n\nComment 'flasher' l'ESP8266 et installer micropython\n\n\nPour flasher le microcontroleur il faut mettre la borne GPIO0 a la masse.\nA partir de PIP il faut installer ESPTOOL.py\nEn tapant la commande: \n    \npip install esptool\ngrace a esptool.py on peux effacer ce qui etait jusqu'a present sur l'esp en\ntapant la commande:\n\n\nesptool.py --port /dev/ttyUSB0 erase_flash\n\n\n\nPour installer le nouveau firmware on tape la commande:\n\n\nesptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=detect 0 esp8266-20170108-v1.8.7.bin\n\n\n\nLibrairies utiles a notre projet\n\n\nimport urequests\n\nimport json\n\nimport machine\n\nimport ssd1306\n\nimport network\n\n\n\n-Urequest: elle possede le meme fonctionnement que la librairie request de python,c'est a dire\nqu'elle est utile lors de la recherche d'url.\n\n\n-Json: il possede le meme fonctionnement qu'en python , c'est a dire qu'il va creer un dictionnaire de liste.\n\n\n-Machine:cette librairie servira dans la plupart des cas a connecter l'ecran avec la librairie propre\na l'ecran SSD1306.\n\n\n-Network:cette librairie sera utilisee pour connecter l'esp par wi-fi a internet.\n\n\nConnectique et affichage.\n\n\nDans un premier temps nous voulions recuperer les donnees meteorologique en ligne il etait essentiel de connecter l'esp a internet.\nNous avons utiliser la librairie NETWORK importer precedemment et nous avons obtenu le code suivant:\n\n\nsta_if=network.WLAN(network.STA_IF)\n\nsta_if.active(True)\n\nsta_if.connect('\nusername\n','\npassword\n')\n\n\n\nCe code permet de connecter notre esp a un reseau sans fil.Pour cela il faut remplacer \nla variable 'username' par le nom du reseau et la variable 'password' par le mot de passe du reseau. \n\n\nDans un second temps pour pouvoir afficher les donnees issue d'internet sur un ecran il faut creer une variable \npour l'ecran et le configurer sur le microcontroleur:\n\n\ni2c=machine.I2C(sc1=machine.pin(2), sda=machine.Pin(0))\n\noled= ssd1306.SSD1306_I2C(128, 64, i2c)\n\n\n\nRecuperation des donnees en micropython.\n\n\nLes lignes de code suivantes permettent d'executer le meme programme qu'en python:\nC'est a dire qu'on va recuperer l'API donc l'URL du site  et ensuite  mettre les donnees en format json.\n\n\nurl=\"http://api.openweathermap.org/data/2.5/weather?id6454414\nAPPID={APIKEY}\n\nr=urequest.get(url)\n\ndata=r.json()\n\nville=data[\"name\"]\n\ndegre=data[\"main\"][\"temp\"]-273.15\n\ndescription=data[\"weather\"][0][\"description\"]\n\ndegree=str(int(degre))\n\n\n\nComme dans le code python on identifie les informations que l'on a besoin d'afficher a l'aide des proprietes d'un dictionnaire.\nOn identifie donc le nom de la ville ,la temperature en degres et la decription du temps.\n\n\nAffichage des informations\n\n\nIl ne nous reste plus qu'a afficher les informations precedemment obtenues sur l'ecran:\n\n\noled.fill(0)\n\noled.show()\n\noled.text('City: '+ville, 30, 10)\n\noled.text('Temp: '+degree, 20, 30)\n\noled.text(description, 10, 50)\n\noled.show()\n\n\n\nOn commence par faire un 'clear'(on supprime les informations precedemment afficher au cas ou\nelle serait encore afficher) ensuite on ecrit ce que l'on veut a l'aide de la commande \"text\"\net enfin on les affiches a l'aide de la fonction oled.show()\n\n\nCODE PYTHON\n\n\nVoici le code PYTHON en un seul bloc:\n\n\nimport requests\n\nimport json\n\n#Http requests\n\nurl=\"http://api.openweathermap.org/data/2.5/forecast?id=2998323\nappid={APIKEY}\"\n\nr=requests.get(url)\n\ndata=r.json()\n\n#Temperature et Descritpion\n\ntemp0=int(data['list'][0]['main']['temp']-273)\n\ndesc0=data['list'][0]['weather'][0]['description']\n\ntemp1=int(data['list'][1]['main']['temp']-273)\n\ndesc1=data['list'][1]['weather'][0]['description']\n\n\n\nIl permet de recuperer les donnes meteorologiques immediate et les previsions pour 3 heures.\n\n\nCODE MICROPYTHON\n\n\nVoici le code MICROPYTHON en un seul bloc:\n\n\nimport urequests\n\nimport json\n\nimport machine\n\nimport ssd1306\n\nimport network\n\nsta_if=network.WLAN(network.STA_IF)\n\nsta_if.active(True)\n\nsta_if.connect('\nusername\n','\npassword\n')\n\ni2c=machine.I2C(sc1=machine.pin(2), sda=machine.Pin(0))\n\noled= ssd1306.SSD1306_I2C(128, 64, i2c)\n\nurl=\"http://api.openweathermap.org/data/2.5/weather?id6454414\nAPPID={APIKEY}\"\n\nr=urequest.get(url)\n\ndata=r.json()\n\nville=data[\"name\"]\n\ndegre=data[\"main\"][\"temp\"]-273.15\n\ndescription=data[\"weather\"][0][\"description\"]\n\ndegree=str(int(degre))\n\noled.fill(0)\n\noled.show()\n\noled.text('City: '+ville, 30, 10)\n\noled.text('Temp: '+degree, 20, 30)\n\noled.text(description, 10, 50)\n\noled.show()\n\n\n\nApres avoir flasher le microcontroleur avec le langage Micropython utiliser le code ci-dessus permettra de\nrecuperer les donnees meteorologique sur le site internet OPENWEATHERMAP et de permettre avec\nun ecran SSD1306 d'afficher les informations tirees du site.", 
            "title": "Le software"
        }, 
        {
            "location": "/le software/#codage-et-informatique-lie-au-projet", 
            "text": "Ici nous detaillerons les differents codes que nous avons developpes pour la realisation du projet.", 
            "title": "Codage et informatique lie au projet"
        }, 
        {
            "location": "/le software/#librairies-utilises-avec-python", 
            "text": "", 
            "title": "Librairies utilises avec PYTHON"
        }, 
        {
            "location": "/le software/#utilisation-de-requests", 
            "text": "import requests  url=\"...\"  r=requests.get(url)  Ces quelques lignes de codes permettent de recuperer les donnees d'une page web.\nIl suffit de remplacer le trou laisser dans la variable URL pour notifier la page web ou l'on souhaite recuperer les informations.   import requests  url=\"https://www.wikipedia.org/\"  r=requests.get(url) print(r)  L'exemple au dessus permet de charger les informations de la page d'acceuil de WIKIPEDIA.", 
            "title": "Utilisation de Requests"
        }, 
        {
            "location": "/le software/#utilisation-dune-api", 
            "text": "Pour notre projet nous avons besoin de recuperer des donnees sur la meteo a des endroits precis du globe,\npour cela nous nous sommes tournes vers le site:    OPENWEATHERMAP.ORG    http://api.openweathermap.org/data/2.5/forecast?id={ID} APPID={APIKEY}  La ligne de code precedente permet de recuperer les donnees meteorologique sur le site a l'aide d'une API.Pour pouvoir utiliser celle ci nous nous sommes\ninscrits sur le site et nous avons recu une APIKEY. Cette APIKEY nous permet d'obtenir les donnees meteorologiques legalement pour permettre le bon fonctionnement de notre projet.", 
            "title": "Utilisation d'une API"
        }, 
        {
            "location": "/le software/#utilisation-du-format-json", 
            "text": "Les donnees sous le format JSON apparaissent sous la forme d'un dictionnaire.\nOn sait qu'un dictionnaire marche grace a la combinaison d'un 'id' et d'une 'cle'.\nOn peut donc extraire la donnee souhaitee si l'on connait les 'liens' propre a ce dictionnaire.\nVoici un petit exemple qui montre comment marche un dictionnaire.  mon_dictionnaires={'mot de passe': '*', 'pseudo': '6pri1'} mon_dictionnaire['mot de passe'] '*' mon_dictionnaire['pseudo'] '6pri1'  Devant la simplicite d'utilisation du format JSON nous avons decide d'incorporer dans notre code la fonction JSON\nqui permettra de crer une arborescence plus simple des donnees et qui nous facilitera l'acces a celles-ci.  Le code va de nouveau se modifier pour devenir:   import requests import json  url=\"http://api.openweathermap.org/data/2.5/forecast?id={ID} appid={APIKEY}\"  r=requests.get(url) data=r.json()", 
            "title": "Utilisation du format json"
        }, 
        {
            "location": "/le software/#algorithme-de-recuperation-des-donnees-meteorologiques", 
            "text": "", 
            "title": "Algorithme de recuperation des donnees meteorologiques"
        }, 
        {
            "location": "/le software/#recuperation-de-la-temperature-et-de-la-description-du-temps", 
            "text": "Dans un fichier texte sur le site OPENWEATHERMAP il est possible de connaitre l'arborescence des differents dictionnaires\nNous avons donc pu deduire les 2 prochaines lignes de code:  temp0=int(data['list'][0]['main']['temp']-273)  (donne la temperature) desc0=data['list'][0]['weather'][0]['description'] (donne la description du temp)", 
            "title": "Recuperation de la temperature et de la description du temps"
        }, 
        {
            "location": "/le software/#comment-avoir-les-donnees-de-la-ville-de-lille", 
            "text": "Maintenant que nous savons comment recuperer les differentes donnees il faut que l'on trouve un moyen pour n'obtenir que les donnees pour la ville de lille.\nReprenons l'url qui nous permet d'acceder aux donnees:  http://api.openweathermap.org/data/2.5/forecast?id={ID} appid={APIKEY}  On remarque que deux donnees sont a rentrer,nous avons deja aborder la premiere qui est APIKEY. \nLa seconde represente un code rattacher a une ville.Le lien entre les villes et leur code est fournis par le site \nOPENWEATHERMAP via un fichier texte qui regroupe toute les ville et leur ID.   Apres quelque recherche Il s'avere que l'ID par laquel la ville de Lille est repertorier est : 2998323.    On obtient donc l'url finale :  http://api.openweathermap.org/data/2.5/forecast?id=2998323 appid={APIKEY}", 
            "title": "Comment avoir les donnees de la ville de LILLE"
        }, 
        {
            "location": "/le software/#utilisation-de-micropython", 
            "text": "Pour coder sur le microcontroleur nous avons importer le langage 'Micropython'.C'est un langage simplifier de python:\nil ne contient pas toutes les librairies disponibles sur python mais il permet de retrouver quelque librairie de base. Ce langage est surtout utilise pour \ncoder des microcontroleurs.", 
            "title": "Utilisation de micropython"
        }, 
        {
            "location": "/le software/#comment-flasher-lesp8266-et-installer-micropython", 
            "text": "Pour flasher le microcontroleur il faut mettre la borne GPIO0 a la masse.\nA partir de PIP il faut installer ESPTOOL.py\nEn tapant la commande: \n     pip install esptool\ngrace a esptool.py on peux effacer ce qui etait jusqu'a present sur l'esp en\ntapant la commande:  esptool.py --port /dev/ttyUSB0 erase_flash  Pour installer le nouveau firmware on tape la commande:  esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=detect 0 esp8266-20170108-v1.8.7.bin", 
            "title": "Comment 'flasher' l'ESP8266 et installer micropython"
        }, 
        {
            "location": "/le software/#librairies-utiles-a-notre-projet", 
            "text": "import urequests import json import machine import ssd1306 import network  -Urequest: elle possede le meme fonctionnement que la librairie request de python,c'est a dire\nqu'elle est utile lors de la recherche d'url.  -Json: il possede le meme fonctionnement qu'en python , c'est a dire qu'il va creer un dictionnaire de liste.  -Machine:cette librairie servira dans la plupart des cas a connecter l'ecran avec la librairie propre\na l'ecran SSD1306.  -Network:cette librairie sera utilisee pour connecter l'esp par wi-fi a internet.", 
            "title": "Librairies utiles a notre projet"
        }, 
        {
            "location": "/le software/#connectique-et-affichage", 
            "text": "Dans un premier temps nous voulions recuperer les donnees meteorologique en ligne il etait essentiel de connecter l'esp a internet.\nNous avons utiliser la librairie NETWORK importer precedemment et nous avons obtenu le code suivant:  sta_if=network.WLAN(network.STA_IF) sta_if.active(True) sta_if.connect(' username ',' password ')  Ce code permet de connecter notre esp a un reseau sans fil.Pour cela il faut remplacer \nla variable 'username' par le nom du reseau et la variable 'password' par le mot de passe du reseau.   Dans un second temps pour pouvoir afficher les donnees issue d'internet sur un ecran il faut creer une variable \npour l'ecran et le configurer sur le microcontroleur:  i2c=machine.I2C(sc1=machine.pin(2), sda=machine.Pin(0)) oled= ssd1306.SSD1306_I2C(128, 64, i2c)", 
            "title": "Connectique et affichage."
        }, 
        {
            "location": "/le software/#recuperation-des-donnees-en-micropython", 
            "text": "Les lignes de code suivantes permettent d'executer le meme programme qu'en python:\nC'est a dire qu'on va recuperer l'API donc l'URL du site  et ensuite  mettre les donnees en format json.  url=\"http://api.openweathermap.org/data/2.5/weather?id6454414 APPID={APIKEY} r=urequest.get(url) data=r.json() ville=data[\"name\"] degre=data[\"main\"][\"temp\"]-273.15 description=data[\"weather\"][0][\"description\"] degree=str(int(degre))  Comme dans le code python on identifie les informations que l'on a besoin d'afficher a l'aide des proprietes d'un dictionnaire.\nOn identifie donc le nom de la ville ,la temperature en degres et la decription du temps.", 
            "title": "Recuperation des donnees en micropython."
        }, 
        {
            "location": "/le software/#affichage-des-informations", 
            "text": "Il ne nous reste plus qu'a afficher les informations precedemment obtenues sur l'ecran:  oled.fill(0) oled.show() oled.text('City: '+ville, 30, 10) oled.text('Temp: '+degree, 20, 30) oled.text(description, 10, 50) oled.show()  On commence par faire un 'clear'(on supprime les informations precedemment afficher au cas ou\nelle serait encore afficher) ensuite on ecrit ce que l'on veut a l'aide de la commande \"text\"\net enfin on les affiches a l'aide de la fonction oled.show()", 
            "title": "Affichage des informations"
        }, 
        {
            "location": "/le software/#code-python", 
            "text": "Voici le code PYTHON en un seul bloc:  import requests import json #Http requests url=\"http://api.openweathermap.org/data/2.5/forecast?id=2998323 appid={APIKEY}\" r=requests.get(url) data=r.json() #Temperature et Descritpion temp0=int(data['list'][0]['main']['temp']-273) desc0=data['list'][0]['weather'][0]['description'] temp1=int(data['list'][1]['main']['temp']-273) desc1=data['list'][1]['weather'][0]['description']  Il permet de recuperer les donnes meteorologiques immediate et les previsions pour 3 heures.", 
            "title": "CODE PYTHON"
        }, 
        {
            "location": "/le software/#code-micropython", 
            "text": "Voici le code MICROPYTHON en un seul bloc:  import urequests import json import machine import ssd1306 import network sta_if=network.WLAN(network.STA_IF) sta_if.active(True) sta_if.connect(' username ',' password ') i2c=machine.I2C(sc1=machine.pin(2), sda=machine.Pin(0)) oled= ssd1306.SSD1306_I2C(128, 64, i2c) url=\"http://api.openweathermap.org/data/2.5/weather?id6454414 APPID={APIKEY}\" r=urequest.get(url) data=r.json() ville=data[\"name\"] degre=data[\"main\"][\"temp\"]-273.15 description=data[\"weather\"][0][\"description\"] degree=str(int(degre)) oled.fill(0) oled.show() oled.text('City: '+ville, 30, 10) oled.text('Temp: '+degree, 20, 30) oled.text(description, 10, 50) oled.show()  Apres avoir flasher le microcontroleur avec le langage Micropython utiliser le code ci-dessus permettra de\nrecuperer les donnees meteorologique sur le site internet OPENWEATHERMAP et de permettre avec\nun ecran SSD1306 d'afficher les informations tirees du site.", 
            "title": "CODE MICROPYTHON"
        }, 
        {
            "location": "/habillage/", 
            "text": "HABILLAGE\n\n\nDans cette derniere partie nous avons chercher a embellir notre projet comme si nous etions amenes a le vendre.\n\nNous avions a notre disposition une imprimante 3D ainsi que le logiciel de design Tinkercad.\n\n\nLe modele choisi\n\n\nAfin de se mettre d'accord sur un modele final,nous avons discuter a propos des proprietes,\nmentionnees ci-dessous,qui correspondent a notre circuit mais surtout aux limites de l'imprimante 3D.\n\n\n Le modele:forme de maison.\n\n Longueur:72 mm.\n\n Largeur:52 mm.\n\n Hauteur:30 mm.\n\n Couleur: noir/dore.\n\n\n\nUtilisation de Tinkercad.\n\n\nTinkercad est un logiciel edite par AUTODESK.C'est un outil de modelisation 3D en ligne.\nOn peux noter sa simplicite d'utilisation.\n\n\n https://www.tinkercad.com\n\n\n\nTinkercad propose des formes de base que l'on peux etirer,vider, modifier les angles par rapport au differents plan de \nl'espace.\nIl permet une visualisation assez claire d'un prototype.\nSon utilisation est tres simple et il nous a permis de concevoir une boite pour emballer notre projet.\nDe plus il permet d'etre precis puisque l'on peux rentrer directements les differentes mesure de notre circuit pour pouvoir travailler en taille reel.\n\n\nUtilisation de l'imprimante 3D.\n\n\nDans le but de realiser notre modele en objet reel, nous avons du apprendre a nous servir d'une imprimante 3D.Une imprimante 3D permet de creer a partir de filaments de plastique chauffes des pieces en volumes. Nous avons du suivre les etapes suivantes:\n\n\nEtape 1\n\n\nApres avoir realiser la 'forme' souhaite sur tinkercad nous avons telecharger le fichier.C'est un format special qui\nne concerne que les imprimantes 3D le STL.\n\n\nEtape 2\n\n\nNous avons ouvert ce fichier avec un autre logiciel qui lui est specialise dans le decoupage et le reglage de tous les parametres\npropre a l'imprimante 3D : CURA.  \n\n\nEtape 3\n\n\nNous avons exportes le fichier obtenu sur une carte SD.L'imprimante 3D possede un port d'entree pour lire la carte SD, Il ne reste plus qu'a choisir le materiaux , regler la temperature et lancer l'impression.", 
            "title": "Habillage"
        }, 
        {
            "location": "/habillage/#habillage", 
            "text": "Dans cette derniere partie nous avons chercher a embellir notre projet comme si nous etions amenes a le vendre. \nNous avions a notre disposition une imprimante 3D ainsi que le logiciel de design Tinkercad.", 
            "title": "HABILLAGE"
        }, 
        {
            "location": "/habillage/#le-modele-choisi", 
            "text": "Afin de se mettre d'accord sur un modele final,nous avons discuter a propos des proprietes,\nmentionnees ci-dessous,qui correspondent a notre circuit mais surtout aux limites de l'imprimante 3D.   Le modele:forme de maison.  Longueur:72 mm.  Largeur:52 mm.  Hauteur:30 mm.  Couleur: noir/dore.", 
            "title": "Le modele choisi"
        }, 
        {
            "location": "/habillage/#utilisation-de-tinkercad", 
            "text": "Tinkercad est un logiciel edite par AUTODESK.C'est un outil de modelisation 3D en ligne.\nOn peux noter sa simplicite d'utilisation.   https://www.tinkercad.com  Tinkercad propose des formes de base que l'on peux etirer,vider, modifier les angles par rapport au differents plan de \nl'espace.\nIl permet une visualisation assez claire d'un prototype.\nSon utilisation est tres simple et il nous a permis de concevoir une boite pour emballer notre projet.\nDe plus il permet d'etre precis puisque l'on peux rentrer directements les differentes mesure de notre circuit pour pouvoir travailler en taille reel.", 
            "title": "Utilisation de Tinkercad."
        }, 
        {
            "location": "/habillage/#utilisation-de-limprimante-3d", 
            "text": "Dans le but de realiser notre modele en objet reel, nous avons du apprendre a nous servir d'une imprimante 3D.Une imprimante 3D permet de creer a partir de filaments de plastique chauffes des pieces en volumes. Nous avons du suivre les etapes suivantes:", 
            "title": "Utilisation de l'imprimante 3D."
        }, 
        {
            "location": "/habillage/#etape-1", 
            "text": "Apres avoir realiser la 'forme' souhaite sur tinkercad nous avons telecharger le fichier.C'est un format special qui\nne concerne que les imprimantes 3D le STL.", 
            "title": "Etape 1"
        }, 
        {
            "location": "/habillage/#etape-2", 
            "text": "Nous avons ouvert ce fichier avec un autre logiciel qui lui est specialise dans le decoupage et le reglage de tous les parametres\npropre a l'imprimante 3D : CURA.", 
            "title": "Etape 2"
        }, 
        {
            "location": "/habillage/#etape-3", 
            "text": "Nous avons exportes le fichier obtenu sur une carte SD.L'imprimante 3D possede un port d'entree pour lire la carte SD, Il ne reste plus qu'a choisir le materiaux , regler la temperature et lancer l'impression.", 
            "title": "Etape 3"
        }
    ]
}